;(function (window, Extensions, mapbox, undefined) {
    'use strict';

    window.Extensions = Extensions;

    /**
     * Map
     * ===
     *
     * @type {Class}
     */

    Extensions.Map = new Class({
        Implements: [Options, Events],

        options: {
            duration        : 300,
            zoom            : 10,
            markerJSONLoc   : '',
            center          : {
                lat: 0,
                lon: 0
            }
        },

        transitions: {
            info: undefined,
            marker: undefined
        },

        isInfoOpen: false,

        openMarker: undefined,

        initialize: function(mapID, options) {
            this.setOptions(options);

            // Elements
            this.mapEl      = document.id(mapID);

            if (this.mapEl === null) return;

            this.info       = this.mapEl.getElement('div.info');
            this.infoClose  = this.info.getElement('a.info-close');
            this.infoInner  = this.info.getElement('div.info-inner');
            this.markers    = [];
            this.markerObjs = [];

            L.mapbox.accessToken = 'pk.eyJ1IjoiYWxleGR1bnBoeSIsImEiOiJsR1NtcEVVIn0.0WS40F65sGGYb3KJrpCmBw'

            this.map    = L.mapbox.map('mapbox-map', null, { zoomControl: false });

            // Get marker data
            this._fetchMarkers();

            // Set up info box transition
            this.transitions.info   = new Fx.Morph(this.info, {
                duration: this.options.duration
            });

            // Do initial map set up tasks
            this._initialSetup();

            // Customise the UI controls
            this._adaptUI();

            // Set up UI events
            this._UIEvents();
        },

        _initialSetup: function() {
            // Add visual map layer (from Mapbox map ID)
            this.map.addLayer(L.mapbox.styleLayer('mapbox://styles/alexdunphy/cl64wsa78002016oun78n2ph1'));

            // Set initial zoom/location
            this.map.setView(
                this.options.center,
                this.options.zoom
            );
        },

        _markerClick: function (marker) {
            var _this = this;

            if (this.isInfoOpen) {
                if (marker === this.openMarker) {
                    return;
                }

                var callback = function () {
                    _this.showMarkerInfo(marker);

                    _this.transitions.info.removeEvent('complete', callback);
                };

                this.transitions.info.addEvent('complete', callback);

                this.transitions.info.start({
                    opacity: 0,
                    transform: 'scale(.9)'
                });
            } else {
                _this.showMarkerInfo(marker);
            }
        },

        _fetchMarkers: function() {
            var _this   = this,
                i       = 0;

            _this.options.markerJSONLoc.each(function (loc) {
                new Request.JSON({
                    url         : loc,
                    onSuccess   : function (data) {
                        _this.markerObjs.combine(data);

                        i++;

                        if (i === _this.options.markerJSONLoc.length) {
                            _this._setUpMarkers();
                        }
                    }
                }).send();
            });
        },

        _setUpMarkers: function() {
            var _this   = this;

            this.markerLayer    = L.mapbox.featureLayer();

            // Add marker layer
            this.map.addLayer(this.markerLayer);

            this.markerLayer.on('layeradd', (event) => {
              event.layer.setIcon(L.icon(event.layer.feature.properties.icon));
            });

            this.markerLayer.setGeoJSON(this.markerObjs);

            // Listen for individual marker clicks
            this.markerLayer.on('click',function(e) {
              // Force the popup closed
              e.layer.closePopup();

              _this._markerClick(e.layer.feature);
            });
        },

        _adaptUI: function() {
          var _this = this;

          this.mapEl.getElement('.zoomout').addEvent('click', (ev) => {
            ev.preventDefault();
            _this.map.zoomOut();
          });

          this.mapEl.getElement('.zoomin').addEvent('click', (ev) => {
            ev.preventDefault();
            _this.map.zoomIn();
          });

          var fullScreen = this.mapEl.getElement('.map-fullscreen');
          fullScreen.addEvent('click', (ev) => {
            ev.preventDefault();
            fullScreen.toggleClass('active');
            _this.mapEl.toggleClass('map-fullscreen-map');
            _this.map._onResize();
          });
        },

        showMarkerInfo: function(marker) {
            var _this = this;

            // Set info open flag
            this.isInfoOpen = true;

            // Cache reference to open marker
            this.openMarker = marker;

            // Reset info box styling
            this.info.setStyles({
                display: 'block',
                opacity: 0,
                transform: 'scale(.9)'
            });

            // Add info box content
            this.infoInner.set('html',
                (marker.properties.name ? '<h4>' + marker.properties.name + '</h4>' : '') +
                (marker.properties.description ? '<p>' + marker.properties.description + '</p>' : '') +
                (marker.properties.url ? '<a class="map-meta ss-icon ss-standard" href="'+ marker.properties.url +'">&#x1F517;</a>' : '')
            );

            if (window.scaleSvgs) window.scaleSvgs();

            // Animate in info box
            setTimeout(function () {
                _this.transitions.info.start({
                    opacity: 1,
                    transform: 'scale(1)'
                });
            }, 0);

            // Center marker
            this.map.panTo
                ({
                    lat: marker.geometry.coordinates[1],
                    lon: marker.geometry.coordinates[0]
                })
        },

        _UIEvents: function() {
            var _this       = this,
                // close       = this.mapEl.getElement('.map-fullscreen'),
                callback    = function () {
                    _this.info.setStyle('display', 'none');

                    _this.isInfoOpen = false;

                    _this.openMarker = undefined;

                    _this.transitions.info.removeEvent('complete', callback);
                },
                closeInfo   = function () {
                    _this.transitions.info.addEvent('complete', callback);

                    _this.transitions.info.start({
                        opacity: 0,
                        transform: 'scale(1.1)'
                    });

                    _this.markers.each(function (m) {
                        m.removeClass('active');

                        m.setStyle('z-index', 1);
                    });
                };

            this.infoClose.addEvents({
                click: function (e) {
                    e.preventDefault();

                    closeInfo();
                },
                touchend: closeInfo
            });
        }
    });

    // DOM ready
    window.addEvent('domready', function () {
        new Extensions.Map(
            'map-find-us',
            {
                zoom            : 15,
                markerJSONLoc   : [
                    '/places'
                ],
                center          : {
                    lat: 50.821339,
                    lon: -0.140580
                }
            }
        );
    });
})(window, window.Extensions || {}, window.mapbox);
