;(function (window, Extensions, History, undefined) {
    'use strict';

    var baseTitle       = 'Buffalo',
        sliderOptions   = {
            markers: false,
            autoPlay: true,
            duration: 700,
            crossFade: false,
            doHeight: false
        };

    window.Extensions = Extensions;

    Extensions.Inst = Extensions.Inst || {};

    Extensions.WorkProjects = new Class({
        Implements: [Options, Events],

        options: {
            duration: 700,
            titleSeparator: '|'
        },

        transitions: {
            wrap: undefined,
            mediaCol: undefined,
            copyCol: undefined,
            sliderWrap: undefined
        },

        busy: false,

        readyParts: 0,

        nextEls: undefined,

        newProject: undefined,

        forward: true,

        initialize: function(wrap, options) {
            var _this = this;

            this.setOptions(options);

            this.wrap       = document.id(wrap);

            if (this.wrap === null) return;

            this.project    = this.wrap.getElement('div.project');
            this.nav        = this.wrap.getElement('.js-work-nav');
            this.left       = this.nav.getElement('a.left');
            this.right      = this.nav.getElement('a.right');
            this.slider     = this.project.getElement('div.slider-wrap') || false;
            this.copyCol    = this.project.getElement('div.grid-4');
            this.mediaCol   = this.project.getElement('div.grid-12');
            this.imacHasLoaded = false;

            if (this.slider) {
                this._setLoading(this.slider);
            }

            // Enable pushState navigation
            if (History.enabled) {
                // Move arrows from project to wrap
                this.nav.inject(this.wrap, 'top');

                // Set up events
                this._events();

                // Set up History
                this._setUpHistory();
            }
        },

        _setLoading: function(sliderWrap) {
            if (this.imacHasLoaded === true) {
                this._instantiateSlider(sliderWrap);

                return true;
            }

            var _this = this,
                inner = sliderWrap.getElement('div.slider-inner'),
                load = sliderWrap.getElement('div.loading');

            inner.setStyle('opacity', 0);

            if (Browser.safari || Browser.firefox) {
            	load.setStyle('line-height', 46);
            }

            load.addClass('active');

            this.transitions.sliderWrap = new Fx.Tween(inner, {
                duration: 500,
                property: 'opacity',
                onComplete: function () {
                    _this.imacHasLoaded = true;

                    _this.wrap.addClass('slider-loaded');
                }
            });

            this.transitions.load = new Fx.Tween(load, {
                duration: 500,
                property: 'opacity',
                onComplete: function () {
                    load.removeClass('active');
                }
            });

            var imac = new Element('img', {
                src: inner.getElement('img.imac').get('src')
            });

            imac.addEvent('load', function () {
                _this._instantiateSlider(sliderWrap);

                _this.transitions.sliderWrap.start(1);

                _this.transitions.load.start(0);
            });
        },

        hideCurrent: function(project) {
            var _this = this;

            this.transitions.mediaCol = new Fx.Morph(this.mediaCol, {
                duration: 500,
                onComplete: function () {
                    _this.showNext();

                    project.destroy();
                }
            });

            this.transitions.copyCol = new Fx.Morph(this.copyCol, {
                duration: 500
            });

            setTimeout(function () {
                _this.transitions.copyCol.start({
                    opacity: 0,
                    transform: 'translateY(-30px)'
                });
            }, 0);

            setTimeout(function () {
                _this.transitions.mediaCol.start({
                    opacity: 0,
                    transform: 'translateX('+ (_this.forward ? '-' : '' ) +'700px)'
                });
            }, 300);
        },

        showNext: function() {
            var _this = this;

            this.readyParts++;

            if (this.readyParts < 2) {
                return;
            }

            // Reset part counter
            this.readyParts = 0;

            this.wrap.adopt(this.newProject);

            setTimeout(function () {
                _this.transitions.newMediaCol.start({
                    opacity: 1,
                    transform: 'none'
                });
            }, 0);

            setTimeout(function () {
                _this.transitions.newCopyCol.start({
                    opacity: 1,
                    transform: 'none'
                });
            }, 500);

            this.project = this.newProject;
            this.slider = this.newSlider;
            this.mediaCol = this.newMediaCol;
            this.copyCol = this.newCopyCol;
        },

        _filterEl: function(prop, selector, num) {
            this['new' + prop]  = this.nextEls.filter(selector)[num || 0] || false;
        },

        _updateArrow: function(name) {
            var capped = 'new' + name.capitalize();

            this[name].set({
                href: this[capped].get('href'),
                'data-title': this[capped].get('data-title')
            });

            this[capped].destroy();
        },

        _refreshEls: function () {
            this._filterEl('Project', 'div.project');
            this._filterEl('Left', 'a.left');
            this._filterEl('Right', 'a.right');
            this._filterEl('Slider', 'div.slider-wrap');
            this._filterEl('CopyCol', 'div.grid-4');
            this._filterEl('MediaCol', 'div.grid-12');

            document.title = this.newProject.get('data-title');

            // Update arrow href/data-title & destroy
            this._updateArrow('left');
            this._updateArrow('right');

            this.transitions.newMediaCol = new Fx.Morph(this.newMediaCol, {
                    duration: 700
                }).set({
                    opacity: 0,
                    transform: 'translateX('+ (this.forward ? '' : '-' ) +'700px)'
                });

            this.transitions.newCopyCol = new Fx.Morph(this.newCopyCol, {
                    duration: 500,
                    onComplete: function() {
                        this.busy = false;

                        // Reset scroll events so gtag engagement data is sent for newly loaded content.
                        if (Extensions.Inst.Track) {
                          Extensions.Inst.Track.resetScrollEvents();
                        }
                    }.bind(this)
                }).set({
                    opacity: 0,
                    transform: 'translateY(-30px)'
                });

            // Instantiate new slider
            if (this.newSlider) {
                this._setLoading(this.newSlider);
            }

            // Add any new tag modal links
            Extensions.Inst.Modal.addLinks(this.newCopyCol.getElements('[data-modal-link]'));
        },

        _instantiateSlider: function(sliderWrap) {
            new Extensions.Slider(sliderWrap.getElement('ul.project-slider'), sliderOptions);
        },

        _events: function () {
            var _this = this;

            // Modal key events
            window.addEvent('keyup', function (e) {
                function prevent() {
                    e.preventDefault();
                    e.stopPropagation();
                }

                switch (e.key) {
                    // Left
                    case 'left':
                        prevent();

                        this.left.fireEvent('click');
                        break;
                    // Right
                    case 'right':
                        prevent();

                        this.right.fireEvent('click');
                        break;
                }
            }.bind(this));

            [this.left, this.right].each(function (arrow) {
                arrow.addEvent('click', function (e) {
                    if (typeof e !== 'undefined') {
                        e.preventDefault();
                    }

                    if (_this.busy) {
                        return false;
                    }

                    _this.busy = true;

                    _this.forward = arrow.hasClass('right');

                    History.pushState(
                        {},         // Arbitrary data
                        baseTitle + ' ' + _this.options.titleSeparator + ' ' + arrow.get('data-title'), // Document title
                        arrow.href  // URL
                    );
                });
            });
        },

        _setUpHistory: function() {
            var _this = this;

            History.Adapter.bind(window, 'statechange', function () {
                var State       = History.getState(),
                    pathParts   = window.location.pathname.split('/');

                pathParts[1] += '.json';

                // Remove current project
                _this.hideCurrent(_this.project);

                new Request.HTML({
                    url: pathParts.join('/'), // Fixed URL while testing
                    onSuccess: function (tree, elements, html) {
                        _this.nextEls = elements;

                        _this._refreshEls();

                        _this.showNext();

                        if (Extensions.Inst.Track) {
                          Extensions.Inst.Track.pageView();
                        }
                    }
                }).send();
            });
        },
    });

    // DOM ready
    //noinspection JSUnresolvedFunction
    window.addEvent('domready', function () {
        new Extensions.WorkProjects(
            'work-projects',
            {
                titleSeparator: '-'
            }
        );
    });
})(window, window.Extensions || {}, window.History);
